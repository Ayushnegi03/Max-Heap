//MAX HEAP
function Max_Heap()
{
    let list = [];
    this.maxHeapify = (Arr, N, i) => {
      let Largest = i;
      let l = 2 * i + 1; 
      let r = 2 * i + 2; 
       if (l < N && Arr[l] > Arr[Largest]) {
             Largest = l; 
       }
       if (r < N && Arr[r] > Arr[Largest]) {
            Largest = r; 
       }
       if (Largest != i) { 
            let temp = Arr[i]; 
            Arr[i] = Arr[Largest]; 
            Arr[Largest] = temp; 
          this.maxHeapify(Arr, N, Largest); 
        } 
    }
    this.insert = (num) => {
      const size = list.length;      
      if(size === 0){
        list.push(num);
      }else{
        list.push(num);

        for (let i = parseInt(list.length / 2 - 1); i >= 0; i--) {
           this.maxHeapify(list, list.length, i); 
        }
      }
    }

    this.delete = (num) => {
      const size = list.length;

      let i;
      for(i = 0; i < size; i++){
        if(list[i] === num){
          break;
        }
      }
      [list[i], list[size - 1]] = [list[size - 1], list[i]];
      list.splice(size - 1);
      
      //Heapify the list again
      for (let i = parseInt(list.length / 2 - 1); i >= 0; i--) {
           this.maxHeapify(list, list.length, i); 
       }
    }
  
    this.findMax = () => list[0];

    this.deleteMax = () => {
      this.delete(list[0]);
    }
    
    this.extractMax = () => {
      const max = list[0];
      this.delete(max);
      return max;
    }
    this.size = () => list.length;
    this.isEmpty = () => list.length === 0;
    this.getList = () => list;
  }
  const heap = new Max_Heap();
  heap.insert(1)
  heap.insert(3);
  heap.insert(4);
  heap.insert(9);
  heap.insert(5);
  heap.insert(2);
  heap.insert(10);
  heap.insert(6);  
  heap.insert(17);
  heap.insert(15);

  console.log("Here is a MAX Heap element:");
  console.log(heap.getList());
  heap.delete(9);
  console.log("Here is deletion of 9:");
  console.log(heap.getList());  
  console.log("Here is insertion of 7:")
  heap.insert(7);
  console.log(heap.getList());
  //Output-
//  Here is a MAX Heap element:
//[ 17, 15, 9, 6, 10, 2,  3, 1, 5,  4 ]
//Here is deletion of 9:
//[ 17, 15, 4, 6, 10, 2,  3, 1, 5 ]
//Here is insertion of 7:
//[ 17, 15, 4, 6, 10, 2,  3, 1, 5,  7 ]
